import{_ as o,c as a,o as t,a2 as i}from"./chunks/framework.B9MTFJbE.js";const u=JSON.parse('{"title":"配置","description":"","frontmatter":{},"headers":[],"relativePath":"zh/deploy/config.md","filePath":"zh/deploy/config.md","lastUpdated":1751723006000}'),c={name:"zh/deploy/config.md"};function d(r,e,l,n,h,s){return t(),a("div",null,e[0]||(e[0]=[i('<h1 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置" aria-label="Permalink to &quot;配置&quot;">​</a></h1><p>通过设置环境变量来配置 RSSHub</p><h2 id="网络配置" tabindex="-1">网络配置 <a class="header-anchor" href="#网络配置" aria-label="Permalink to &quot;网络配置&quot;">​</a></h2><p><code>PORT</code>: 监听端口，默认为 <code>1200</code></p><p><code>SOCKET</code>: 监听 Unix Socket，默认 <code>null</code></p><p><code>LISTEN_INADDR_ANY</code>: 是否允许公网连接，默认 <code>1</code></p><p><code>REQUEST_RETRY</code>: 请求失败重试次数，默认 <code>2</code></p><p><code>REQUEST_TIMEOUT</code>: 请求超时毫秒数，默认 <code>3000</code></p><p><code>UA</code>: 用户代理，默认为随机用户代理用户代理（macOS 上的 Chrome）</p><p><code>NO_RANDOM_UA</code>: 是否禁用随机用户代理，默认 <code>null</code></p><h2 id="跨域请求" tabindex="-1">跨域请求 <a class="header-anchor" href="#跨域请求" aria-label="Permalink to &quot;跨域请求&quot;">​</a></h2><p>RSSHub 默认对跨域请求限制为当前连接所在的域名，即不允许跨域。可以通过 <code>ALLOW_ORIGIN: *</code> 或者 <code>ALLOW_ORIGIN: www.example.com</code> 以对跨域访问进行修改。</p><h2 id="缓存配置" tabindex="-1">缓存配置 <a class="header-anchor" href="#缓存配置" aria-label="Permalink to &quot;缓存配置&quot;">​</a></h2><p>RSSHub 支持 <code>memory</code> 和 <code>redis</code> 两种缓存方式，建议使用 <code>redis</code> 以持久化缓存。</p><p><code>CACHE_TYPE</code>: 缓存类型，可为 <code>memory</code> 和 <code>redis</code>，设为空可以禁止缓存，默认为 <code>memory</code></p><p><code>CACHE_EXPIRE</code>: 路由缓存过期时间，单位为秒，默认 <code>5 * 60</code></p><p><code>CACHE_CONTENT_EXPIRE</code>: 内容缓存过期时间，每次访问会重新计算过期时间，单位为秒，默认 <code>1 * 60 * 60</code></p><p><code>REDIS_URL</code>: Redis 连接地址（redis 缓存类型时有效），默认为 <code>redis://localhost:6379/</code></p><p><code>MEMORY_MAX</code>: 最大缓存数量（memory 缓存类型时有效），默认 <code>256</code></p><h2 id="代理配置" tabindex="-1">代理配置 <a class="header-anchor" href="#代理配置" aria-label="Permalink to &quot;代理配置&quot;">​</a></h2><p>部分路由反爬严格，可以配置使用代理抓取。</p><p><code>PROXY_URI</code>: 代理 URI，格式为 <code>{protocol}://{host}:{port}</code>，protocol 只支持 http, https。socks5 支持讨论见 <a href="https://github.com/nodejs/undici/issues/2224" target="_blank" rel="noreferrer">nodejs/undici#2224</a></p><p><code>PROXY_AUTH</code>: 给代理服务器的身份验证凭证，会添加 header <code>Proxy-Authorization: Basic ${PROXY_AUTH}</code></p><p><code>PROXY_URL_REGEX</code>: 启用代理的 URL 正则表达式，默认全部开启 <code>.*</code></p><h2 id="访问控制配置" tabindex="-1">访问控制配置 <a class="header-anchor" href="#访问控制配置" aria-label="Permalink to &quot;访问控制配置&quot;">​</a></h2><p>RSSHub 支持使用访问密钥 / 码进行访问控制。开启将会激活全局访问控制，没有访问权限将会导致访问被拒绝。</p><p><strong>允许清单/拒绝清单</strong></p><p>建议使用类似 Nginx 或 Cloudflare 的代理服务器进行访问控制。</p><p><strong>访问密钥 / 码</strong></p><ul><li><code>ACCESS_KEY</code>: 访问密钥，用于直接访问所有路由或者生成访问码</li></ul><p>访问码为 访问密钥 + 路由 共同生成的 md5，例如：</p><table tabindex="0"><thead><tr><th>访问密钥</th><th>路由</th><th>生成过程</th><th>访问码</th></tr></thead><tbody><tr><td>ILoveRSSHub</td><td>/qdaily/column/59</td><td>md5(&#39;/qdaily/column/59&#39; + &#39;ILoveRSSHub&#39;)</td><td>0f820530128805ffc10351f22b5fd121</td></tr></tbody></table><ul><li><p>此时可以通过 <code>code</code> 访问路由，例如：<code>https://rsshub.app/qdaily/column/59?code=0f820530128805ffc10351f22b5fd121</code></p></li><li><p>或使用访问密钥 <code>key</code> 直接访问所有路由，例如：<code>https://rsshub.app/qdaily/column/59?key=ILoveRSSHub</code></p></li></ul><p><strong>Healthcheck 配置</strong></p><p>当启用 <code>ACCESS_KEY</code> 时，<code>healthcheck</code> 端点也需要进行身份验证。</p><p>对于 Docker Compose 部署，你需要在 <code>docker-compose.yml</code> 中更新 <code>healthcheck</code> 配置以包含访问密钥或访问码参数。</p><p>推荐的配置如下：</p><div class="language-diff vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">healthcheck:</span></span>\n<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">-  test: [&quot;CMD&quot;, &quot;curl&quot;, &quot;-f&quot;, &quot;http://localhost:1200/healthz&quot;]</span></span>\n<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+  test: [&quot;CMD&quot;, &quot;curl&quot;, &quot;-f&quot;, &quot;http://localhost:1200/healthz?key=${ACCESS_KEY}&quot;]</span></span></code></pre></div><h2 id="日志配置" tabindex="-1">日志配置 <a class="header-anchor" href="#日志配置" aria-label="Permalink to &quot;日志配置&quot;">​</a></h2><p><code>DEBUG_INFO</code>: 是否在首页显示路由信息。值为非 <code>true</code> <code>false</code> 时，在请求中带上参数 <code>debug</code> 开启显示，例如：<code>https://rsshub.app/?debug=value_of_DEBUG_INFO</code> 。默认 <code>true</code></p><p><code>LOGGER_LEVEL</code>: 指明输出到 console 和日志文件的日志的最大 <a href="https://github.com/winstonjs/winston#logging-levels" target="_blank" rel="noreferrer">等级</a>，默认 <code>info</code></p><p><code>NO_LOGFILES</code>: 是否禁用日志文件输出，默认 <code>false</code></p><p><code>SHOW_LOGGER_TIMESTAMP</code>: 在控制台输出中显示日志时间戳，默认 <code>false</code></p><p><code>SENTRY</code>: <a href="https://sentry.io" target="_blank" rel="noreferrer">Sentry</a> dsn，用于错误追踪</p><p><code>SENTRY_ROUTE_TIMEOUT</code>: 路由耗时超过此毫秒值上报 Sentry，默认 <code>3000</code></p><h2 id="图片处理" tabindex="-1">图片处理 <a class="header-anchor" href="#图片处理" aria-label="Permalink to &quot;图片处理&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">新配置方式</p><p>我们正在试验新的，更灵活的配置方式。如果有需要，请转到 <a href="/zh/guide/parameters#多媒体处理">通用参数 -&gt; 多媒体处理</a> 了解更多。</p><p>在使用新配置时，请将下方环境变量留空。否则默认图片模版会继续遵循下方配置。</p></div><p><code>HOTLINK_TEMPLATE</code>: 用于处理描述中图片的 URL，绕过防盗链等限制，留空不生效。用法参考 <a href="https://github.com/DIYgod/RSSHub/issues/2769" target="_blank" rel="noreferrer">#2769</a>。可以使用 <a href="https://developer.mozilla.org/en-US/docs/Web/API/URL#Properties" target="_blank" rel="noreferrer">URL</a> 的所有属性（加上后缀 <code>_ue</code> 则会对其进行 URL 编码），格式为 JS 变量模板。例子：<code>${protocol}//${host}${pathname}</code>, <code>https://i3.wp.com/${host}${pathname}</code>, <code>https://images.weserv.nl?url=${href_ue}</code></p><p><code>HOTLINK_INCLUDE_PATHS</code>: 限制需要处理的路由，只有匹配成功的路由会被处理，设置多项时用英文逗号 <code>,</code> 隔开。若不设置，则所有路由都将被处理</p><p><code>HOTLINK_EXCLUDE_PATHS</code>: 排除不需处理的路由，所有匹配成功的路由都不被处理，设置多项时用英文逗号 <code>,</code> 隔开。可单独使用，也可用于排除已被前者包含的路由。若不设置，则没有任何路由会被过滤</p><div class="tip custom-block"><p class="custom-block-title">路由匹配模式</p><p><code>HOTLINK_INCLUDE_PATHS</code> 和 <code>HOTLINK_EXCLUDE_PATHS</code> 均匹配路由根路径及其所有递归子路径，但并非子字符串匹配。注意必须以 <code>/</code> 开头，且结尾不需要 <code>/</code>。</p><p>例：<code>/example</code>, <code>/example/sub</code> 和 <code>/example/anthoer/sub/route</code> 均可被 <code>/example</code> 匹配，但 <code>/example_route</code> 不会被匹配。</p><p>也可带有路由参数，如 <code>/weibo/user/2612249974</code> 也是合法的。</p></div><h2 id="功能特性" tabindex="-1">功能特性 <a class="header-anchor" href="#功能特性" aria-label="Permalink to &quot;功能特性&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">测试特性</p><p>这个板块控制的是一些新特性的选项，他们都是<strong>默认关闭</strong>的。如果有需要请阅读对应说明后按需开启</p></div><p><code>ALLOW_USER_HOTLINK_TEMPLATE</code>: <a href="/zh/guide/parameters#多媒体处理">通用参数 -&gt; 多媒体处理</a>特性控制</p><p><code>FILTER_REGEX_ENGINE</code>: 控制 <a href="/zh/guide/parameters#内容过滤">通用参数 -&gt; 内容过滤</a> 使用的正则引擎。可选<code>[re2, regexp]</code>，默认<code>re2</code>。我们推荐公开实例不要调整这个选项，这个选项目前主要用于向后兼容。</p><p><code>ALLOW_USER_SUPPLY_UNSAFE_DOMAIN</code>: 允许用户为路由提供域名作为参数。建议公共实例不要调整此选项，开启后可能会导致 <a href="https://owasp.org/www-community/attacks/Server_Side_Request_Forgery" target="_blank" rel="noreferrer">服务端请求伪造（SSRF）</a></p><h2 id="其他应用配置" tabindex="-1">其他应用配置 <a class="header-anchor" href="#其他应用配置" aria-label="Permalink to &quot;其他应用配置&quot;">​</a></h2><p><code>DISALLOW_ROBOT</code>: 阻止搜索引擎收录，默认开启，设置 false 或 0 关闭</p><p><code>ENABLE_CLUSTER</code>: 是否开启集群模式，默认 <code>false</code></p><p><code>NODE_ENV</code>: 是否显示错误输出，默认 <code>production</code> （即关闭输出）</p><p><code>NODE_NAME</code>: 节点名，用于负载均衡，识别当前节点</p><p><code>PUPPETEER_WS_ENDPOINT</code>: 用于 puppeteer.connect 的浏览器 websocket 链接，见 <a href="https://zhaoqize.github.io/puppeteer-api-zh_CN/#?product=Puppeteer&amp;show=api-browserwsendpoint" target="_blank" rel="noreferrer">browserWSEndpoint</a></p><p><code>CHROMIUM_EXECUTABLE_PATH</code>: Chromium（或 Chrome）的可执行路径。若 puppeteer 没有下载捆绑的 Chromium（主动跳过下载或体系架构为 arm/arm64），设置此项可启用 puppeteer。或者，偏好 Chrome 而不是 Chromium 时，此项也很有用。<strong>注意</strong>：<code>PUPPETEER_WS_ENDPOINT</code> 被设置时，此项不生效；仅在手动部署时有用，对于 Docker 部署，请改用 <code>chromium-bundled</code> 版本镜像。</p><p><code>TITLE_LENGTH_LIMIT</code>: 限制输出标题的字节长度，一个英文字符的长度为 1 字节，部分语言如中文，日文，韩文或阿拉伯文等，统一算作 2 字节，默认 <code>150</code></p><p><code>OPENAI_API_KEY</code>: OpenAI API Key，用于使用 ChatGPT 总结文章</p><p><code>OPENAI_MODEL</code>: OpenAI 模型名称，用于使用 ChatGPT 总结文章，默认<code>gpt-3.5-turbo-16k</code>，详见 <a href="https://platform.openai.com/docs/models/overview" target="_blank" rel="noreferrer">OpenAI API 文档</a></p><p><code>OPENAI_TEMPERATURE</code>: OpenAI 温度参数，用于使用 ChatGPT 总结文章，默认<code>0.2</code>，详见 <a href="https://platform.openai.com/docs/api-reference/chat/create#chat-create-temperature" target="_blank" rel="noreferrer">OpenAI API 文档</a></p><p><code>OPENAI_MAX_TOKENS</code>: OpenAI 最大 token 数，用于使用 ChatGPT 总结文章，默认<code>null</code>，详见 <a href="https://platform.openai.com/docs/api-reference/chat/create#chat-create-max_tokens" target="_blank" rel="noreferrer">OpenAI API 文档</a></p><p><code>OPENAI_API_ENDPOINT</code>: OpenAI API 地址，用于使用 ChatGPT 总结文章，默认<code>https://api.openai.com/v1</code>，详见 <a href="https://platform.openai.com/docs/api-reference/chat" target="_blank" rel="noreferrer">OpenAI API 文档</a></p><p><code>OPENAI_PROMPT</code>: OpenAI 提示语，用于使用 ChatGPT 总结文章，详见 <a href="https://platform.openai.com/docs/api-reference/chat" target="_blank" rel="noreferrer">OpenAI API 文档</a></p><p><code>REMOTE_CONFIG</code>: 远程配置地址，用于动态更新配置，地址应返回一个环境变量名作为 key 的 JSON，会在应用启动时加载并合并本地配置，与本地配置冲突时以远程配置为准，但请注意部分基础配置项不支持从远程获取</p><h2 id="route-specific-configurations" tabindex="-1">部分 RSS 模块配置 <a class="header-anchor" href="#route-specific-configurations" aria-label="Permalink to &quot;部分 RSS 模块配置 {#route-specific-configurations}&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>此处信息不完整。完整配置请参考路由对应的文档和 <code>lib/config.ts</code>。</p></div><h3 id="_4399-论坛" tabindex="-1">4399 论坛 <a class="header-anchor" href="#_4399-论坛" aria-label="Permalink to &quot;4399 论坛&quot;">​</a></h3><ul><li><code>GAME_4399</code>: 对应登录后的 cookie 值，获取方式： <ol><li>在 4399 首页登录。</li><li>打开开发者工具，切换到 Network 面板，刷新</li><li>查找<code>www.4399.com</code>的访问请求，点击请求，在右侧 Headers 中找到 Cookie.</li></ol></li></ul><h3 id="bilibili" tabindex="-1">bilibili <a class="header-anchor" href="#bilibili" aria-label="Permalink to &quot;bilibili&quot;">​</a></h3><p>用于用户关注动态系列路由</p><ul><li><code>BILIBILI_COOKIE_{uid}</code>: 对应 uid 的 b 站用户登录后的 Cookie 值，<code>{uid}</code> 替换为 uid，如 <code>BILIBILI_COOKIE_2267573</code>，获取方式： <ol><li>打开 <a href="https://api.vc.bilibili.com/dynamic_svr/v1/dynamic_svr/dynamic_new?uid=0&amp;type=8" target="_blank" rel="noreferrer">https://api.vc.bilibili.com/dynamic_svr/v1/dynamic_svr/dynamic_new?uid=0&amp;type=8</a></li><li>打开控制台，切换到 Network 面板，刷新</li><li>点击 dynamic_new 请求，找到 Cookie</li><li>视频和专栏，UP 主粉丝及关注只要求 <code>SESSDATA</code> 字段，动态需复制整段 Cookie</li></ol></li></ul><h3 id="bitbucket" tabindex="-1">Bitbucket <a class="header-anchor" href="#bitbucket" aria-label="Permalink to &quot;Bitbucket&quot;">​</a></h3><p><a href="https://developer.atlassian.com/cloud/bitbucket/rest/intro/#basic-auth" target="_blank" rel="noreferrer">Basic auth with App passwords</a></p><ul><li><code>BITBUCKET_USERNAME</code>: 你的 Bitbucket 用户名</li><li><code>BITBUCKET_PASSWORD</code>: 你的 Bitbucket 密码</li></ul><h3 id="btbyr" tabindex="-1">BTBYR <a class="header-anchor" href="#btbyr" aria-label="Permalink to &quot;BTBYR&quot;">​</a></h3><ul><li><code>BTBYR_HOST</code>: 支持 ipv4 访问的 BTBYR 镜像，默认为原站 <code>https://bt.byr.cn/</code>。</li><li><code>BTBYR_COOKIE</code>: 注册用户登录后的 Cookie 值，获取方式： <ol><li>登录后打开网站首页</li><li>打开控制台，刷新</li><li>找到 <code>https://bt.byr.cn/index.php</code> 请求</li><li>找到请求头中的 Cookie</li></ol></li></ul><h3 id="bupt" tabindex="-1">BUPT <a class="header-anchor" href="#bupt" aria-label="Permalink to &quot;BUPT&quot;">​</a></h3><ul><li><code>BUPT_PORTAL_COOKIE</code>: 登录后获得的 Cookie 值，获取方式 <ol><li>打开 <a href="https://webapp.bupt.edu.cn/wap/login.html?redirect=https://" target="_blank" rel="noreferrer">https://webapp.bupt.edu.cn/wap/login.html?redirect=https://</a>&gt;并登录</li><li>无视掉报错，并打开 <a href="https://webapp.bupt.edu.cn/extensions/wap/news/list.html?p-1&amp;type=xnxw" target="_blank" rel="noreferrer">https://webapp.bupt.edu.cn/extensions/wap/news/list.html?p-1&amp;type=xnxw</a></li><li>打开控制台，刷新</li><li>找到 <code>https://webapp.bupt.edu.cn/extensions/wap/news/list.html?p-1&amp;type=xnxw</code> 请求</li><li>找到请求头中的 Cookie</li></ol></li></ul><h3 id="civitai" tabindex="-1">Civitai <a class="header-anchor" href="#civitai" aria-label="Permalink to &quot;Civitai&quot;">​</a></h3><ul><li><code>CIVITAI_COOKIE</code>: Civitai 登录后的 cookie 值</li></ul><h3 id="discourse" tabindex="-1">Discourse <a class="header-anchor" href="#discourse" aria-label="Permalink to &quot;Discourse&quot;">​</a></h3><ul><li><code>DISCOURSE_CONFIG_{id}</code>: 一个 Discourse 驱动的论坛的配置信息， <code>id</code> 可自由设定为任意数字或字符串。值应形如<code>{&quot;link&quot;:link,&quot;key&quot;:key}</code>。其中：</li><li><code>link</code>：论坛的链接。</li><li><code>key</code>访问论坛 API 的密钥，可参考 <a href="https://pastebin.com/YbLCgdWW" target="_blank" rel="noreferrer">此处代码</a> 以获取。需要确保有足够权限访问对应资源。</li></ul><h3 id="discuz" tabindex="-1">Discuz <a class="header-anchor" href="#discuz" aria-label="Permalink to &quot;Discuz&quot;">​</a></h3><ul><li><code>DISCUZ_COOKIE_{cid}</code>: 某 Discuz 驱动的论坛，用户注册后的 Cookie 值，cid 可自由设定，取值范围 [00, 99], 使用 discuz 通用路由时，通过指定 cid 来调用该 cookie</li></ul><h3 id="disqus" tabindex="-1">Disqus <a class="header-anchor" href="#disqus" aria-label="Permalink to &quot;Disqus&quot;">​</a></h3><p><a href="https://disqus.com/api/applications/" target="_blank" rel="noreferrer">申请地址</a></p><ul><li><code>DISQUS_API_KEY</code>: Disqus API</li></ul><h3 id="e-hentai" tabindex="-1">E-Hentai <a class="header-anchor" href="#e-hentai" aria-label="Permalink to &quot;E-Hentai&quot;">​</a></h3><ul><li><code>EH_IPB_MEMBER_ID</code>: E-Hentai 账户登录后 cookie 的 <code>ipb_member_id</code> 值</li><li><code>EH_IPB_PASS_HASH</code>: E-Hentai 账户登录后 cookie 的 <code>ipb_pass_hash</code> 值</li><li><code>EH_SK</code>: E-Hentai 账户登录后 cookie 中的<code>sk</code>值</li><li><code>EH_IGNEOUS</code>: ExHentai 账户登录后 cookie 中的<code>igneous</code>值。若设置此值，RSS 数据将全部从里站获取</li><li><code>EH_STAR</code>: E-Hentai 账户获得捐赠等级后将出现该 cookie。若设置此值，图片访问量限制将与账号关联而非 IP 地址</li><li><code>EH_IMG_PROXY</code>: 封面代理访问地址。若设置此值，封面图链接将被替换为以此值开头。使用 ExHentai 时，封面图需要有 Cookie 才能访问，在一些阅读软件上没法显示封面，可以使用此值搭配一个加 Cookie 的代理服务器实现阅读软件无 Cookie 获取封面图。</li></ul><h3 id="fantia" tabindex="-1">Fantia <a class="header-anchor" href="#fantia" aria-label="Permalink to &quot;Fantia&quot;">​</a></h3><ul><li><code>FANTIA_COOKIE</code>: 登录后的 <code>cookie</code> , 可以在控制台中查看请求头获取。如果不填会导致部分需要登录后才能阅读的帖子获取异常</li></ul><h3 id="gitee" tabindex="-1">Gitee <a class="header-anchor" href="#gitee" aria-label="Permalink to &quot;Gitee&quot;">​</a></h3><p><a href="https://gitee.com/api/v5/swagger" target="_blank" rel="noreferrer">申请地址</a></p><ul><li><code>GITEE_ACCESS_TOKEN</code>: Gitee 私人令牌</li></ul><h3 id="github" tabindex="-1">GitHub <a class="header-anchor" href="#github" aria-label="Permalink to &quot;GitHub&quot;">​</a></h3><p><a href="https://github.com/settings/tokens" target="_blank" rel="noreferrer">申请地址</a></p><ul><li><code>GITHUB_ACCESS_TOKEN</code>: GitHub Access Token</li></ul><h3 id="google-fonts" tabindex="-1">Google Fonts <a class="header-anchor" href="#google-fonts" aria-label="Permalink to &quot;Google Fonts&quot;">​</a></h3><p><a href="https://developers.google.com/fonts/docs/developer_api#a_quick_example" target="_blank" rel="noreferrer">申请地址</a></p><ul><li><code>GOOGLE_FONTS_API_KEY</code>: API key</li></ul><h3 id="instagram" tabindex="-1">Instagram <a class="header-anchor" href="#instagram" aria-label="Permalink to &quot;Instagram&quot;">​</a></h3><ul><li><code>IG_USERNAME</code>: Instagram 用户名（仅 Private API）</li><li><code>IG_PASSWORD</code>: Instagram 密码（仅 Private API）</li><li><code>IG_PROXY</code>: Instagram 代理 URL（仅 Private API，可选）</li><li><code>IG_COOKIE</code>: Instagram 登录后的 Cookie（仅 Cookie）</li></ul><p>注意，暂<strong>不支持</strong>两步验证。</p><h3 id="iwara" tabindex="-1">Iwara <a class="header-anchor" href="#iwara" aria-label="Permalink to &quot;Iwara&quot;">​</a></h3><ul><li><code>IWARA_USERNAME</code>: Iwara 用户名</li><li><code>IWARA_PASSWORD</code>: Iwara 密码</li></ul><h3 id="last-fm" tabindex="-1">Last.fm <a class="header-anchor" href="#last-fm" aria-label="Permalink to &quot;Last.fm&quot;">​</a></h3><p><a href="https://www.last.fm/api/" target="_blank" rel="noreferrer">申请地址</a></p><ul><li><code>LASTFM_API_KEY</code>: Last.fm API Key</li></ul><h3 id="lightnovel-us" tabindex="-1">LightNovel.us <a class="header-anchor" href="#lightnovel-us" aria-label="Permalink to &quot;LightNovel.us&quot;">​</a></h3><ul><li><code>SECURITY_KEY</code>: 在token中security_key的值，请去除%22，例如<code>{%22security_key%22:%223cXXXX%22}</code>,只需要3cXXXX部分</li></ul><h3 id="mastodon" tabindex="-1">Mastodon <a class="header-anchor" href="#mastodon" aria-label="Permalink to &quot;Mastodon&quot;">​</a></h3><p>用户时间线路由：访问 <code>https://mastodon.example/settings/applications</code> 申请（替换掉 <code>mastodon.example</code>）。需要 <code>read:search</code> 和 <code>read:statuses</code> 权限。</p><ul><li><code>MASTODON_API_HOST</code>: API 请求的实例，仅域名，不包括 <code>http://</code> 或 <code>https://</code> 协议头</li><li><code>MASTODON_API_ACCESS_TOKEN</code>: 用户 access token, 申请应用后，在应用配置页可以看到申请者的 access token</li><li><code>MASTODON_API_ACCT_DOMAIN</code>: 该实例本地用户 acct 标识的域名，即 WebFinger URI <code>username@domain</code> 中的 <code>domain</code>，一般和 <code>MASTODON_API_HOST</code> 相同</li></ul><h3 id="medium" tabindex="-1">Medium <a class="header-anchor" href="#medium" aria-label="Permalink to &quot;Medium&quot;">​</a></h3><p>打开控制台，复制 Cookie（理论上只需要 uid 和 sid 即可）</p><ul><li><code>MEDIUM_ARTICLE_COOKIE</code>：请求全文时使用的 Cookie，存在活跃的 Member 订阅时可获取付费内容全文</li><li><code>MEDIUM_COOKIE_{username}</code>：对应 username 的用户的 Cookie，个性推荐相关路由需要</li></ul><h3 id="miniflux" tabindex="-1">MiniFlux <a class="header-anchor" href="#miniflux" aria-label="Permalink to &quot;MiniFlux&quot;">​</a></h3><ul><li><code>MINIFLUX_INSTANCE</code>： 用户所用的实例，默认为 MiniFlux 官方提供的 <a href="https://reader.miniflux.app" target="_blank" rel="noreferrer">付费服务地址</a></li><li><code>MINIFLUX_TOKEN</code>: 用户的 API 密钥，请登录所用实例后于 <code>设置</code> -&gt; <code>API 密钥</code> -&gt; <code>创建一个新的 API 密钥</code> 处获取</li></ul><h3 id="nga-bbs" tabindex="-1">NGA BBS <a class="header-anchor" href="#nga-bbs" aria-label="Permalink to &quot;NGA BBS&quot;">​</a></h3><p>用于获取帖子内文</p><ul><li><code>NGA_PASSPORT_UID</code>: 对应 cookie 中的 <code>ngaPassportUid</code>.</li><li><code>NGA_PASSPORT_CID</code>: 对应 cookie 中的 <code>ngaPassportCid</code>.</li></ul><h3 id="nhentai-torrent" tabindex="-1">nhentai torrent <a class="header-anchor" href="#nhentai-torrent" aria-label="Permalink to &quot;nhentai torrent&quot;">​</a></h3><p><a href="https://nhentai.net/register/" target="_blank" rel="noreferrer">注册地址</a></p><ul><li><code>NHENTAI_USERNAME</code>: nhentai 用户名或邮箱</li><li><code>NHENTAI_PASSWORD</code>: nhentai 密码</li></ul><h3 id="notion" tabindex="-1">Notion <a class="header-anchor" href="#notion" aria-label="Permalink to &quot;Notion&quot;">​</a></h3><ul><li><code>NOTION_TOKEN</code>: Notion 内部集成 Token，请按照 <a href="https://developers.notion.com/docs/authorization#internal-integration-auth-flow-set-up" target="_blank" rel="noreferrer">Notion 官方指引</a> 申请 Token</li></ul><h3 id="pianyuan" tabindex="-1">pianyuan <a class="header-anchor" href="#pianyuan" aria-label="Permalink to &quot;pianyuan&quot;">​</a></h3><p><a href="https://pianyuan.org" target="_blank" rel="noreferrer">注册地址</a></p><ul><li><code>PIANYUAN_COOKIE</code>: 对应 cookie 中的 <code>py_loginauth</code>, 例：PIANYUAN_COOKIE=&#39;py_loginauth=xxxxxxxxxx&#39;</li></ul><h3 id="pixiv" tabindex="-1">pixiv <a class="header-anchor" href="#pixiv" aria-label="Permalink to &quot;pixiv&quot;">​</a></h3><p><a href="https://accounts.pixiv.net/signup" target="_blank" rel="noreferrer">注册地址</a></p><ul><li><code>PIXIV_REFRESHTOKEN</code>: Pixiv Refresh Token, 请参考 <a href="https://gist.github.com/ZipFile/c9ebedb224406f4f11845ab700124362" target="_blank" rel="noreferrer">此文</a> 获取，或自行对客户端抓包获取</li><li><code>PIXIV_BYPASS_CDN</code>: 绕过 Pixiv 前置的 Cloudflare CDN, 使用<code>PIXIV_BYPASS_HOSTNAME</code>指示的 IP 地址访问 Pixiv API, 可以解决因 Cloudflare 机器人验证导致的登录失败问题，默认关闭，设置 true 或 1 开启</li><li><code>PIXIV_BYPASS_HOSTNAME</code>: Pixiv 源站的主机名或 IP 地址，主机名会被解析为 IPv4 地址，默认为<code>public-api.secure.pixiv.net</code>；仅在<code>PIXIV_BYPASS_CDN</code>开启时生效</li><li><code>PIXIV_BYPASS_DOH</code>: 用于解析 <code>PIXIV_BYPASS_HOSTNAME</code> 的 DoH 端点 URL，需要兼容 Cloudflare 或 Google 的 DoH 服务的 JSON 查询格式，默认为 <code>https://1.1.1.1/dns-query</code></li><li><code>PIXIV_IMG_PROXY</code>: 用于图片地址的代理，因为 pixiv 图片有防盗链，默认为 <code>https://i.pixiv.re</code></li></ul><h3 id="pixiv-fanbox" tabindex="-1">pixiv fanbox <a class="header-anchor" href="#pixiv-fanbox" aria-label="Permalink to &quot;pixiv fanbox&quot;">​</a></h3><p>用于获取付费内容</p><ul><li><code>FANBOX_SESSION_ID</code>: 对应 cookies 中的<code>FANBOXSESSID</code>。</li></ul><h3 id="saraba1st" tabindex="-1">Saraba1st <a class="header-anchor" href="#saraba1st" aria-label="Permalink to &quot;Saraba1st&quot;">​</a></h3><p>用于获取帖子里的图片</p><ul><li><code>SARABA1ST_COOKIE</code>: 对应网页端的 Cookie。</li></ul><h3 id="sci-hub" tabindex="-1">Sci-hub <a class="header-anchor" href="#sci-hub" aria-label="Permalink to &quot;Sci-hub&quot;">​</a></h3><p>用于科学期刊路由。</p><ul><li><code>SCIHUB_HOST</code>: 可访问的 sci-hub 镜像地址，默认为 <code>https://sci-hub.se</code>。</li></ul><h3 id="spotify" tabindex="-1">Spotify <a class="header-anchor" href="#spotify" aria-label="Permalink to &quot;Spotify&quot;">​</a></h3><p><a href="https://developer.spotify.com" target="_blank" rel="noreferrer">注册地址</a></p><ul><li><code>SPOTIFY_CLIENT_ID</code>: Spotify 应用的 client ID</li><li><code>SPOTIFY_CLIENT_SECRET</code>: Spotify 应用的 client secret</li></ul><p>用户相关路由</p><ul><li><code>SPOTIFY_REFRESHTOKEN</code>：用户在此 Spotify 应用的 refresh token。可以利用 <a href="https://github.com/alecchendev/spotify-refresh-token" target="_blank" rel="noreferrer">alecchendev</a> 制作的 <a href="https://alecchen.dev/spotify-refresh-token/" target="_blank" rel="noreferrer">spotify-refresh-token</a> 获取。</li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>记得为 <code>Personal Top Items</code> 或 <code>Personal Saved Tracks</code> 分别勾选 <code>user-top-read</code> 或 <code>user-library-read</code> scope。</p></div><h3 id="telegram" tabindex="-1">Telegram <a class="header-anchor" href="#telegram" aria-label="Permalink to &quot;Telegram&quot;">​</a></h3><p>贴纸包路由：<a href="https://telegram.org/blog/bot-revolution" target="_blank" rel="noreferrer">Telegram 机器人</a></p><ul><li><code>TELEGRAM_TOKEN</code>: Telegram 机器人 token</li><li><code>TELEGRAM_SESSION</code>: 可通过运行 <code>node lib/routes/telegram/tglib/client.js</code></li></ul><h3 id="twitter" tabindex="-1">Twitter <a class="header-anchor" href="#twitter" aria-label="Permalink to &quot;Twitter&quot;">​</a></h3><p>建议使用非重要账号，新账号或者不同地区登录可能会被限制登录</p><ul><li><code>TWITTER_USERNAME</code>: Twitter 用户名</li><li><code>TWITTER_PASSWORD</code>: Twitter 密码</li><li><code>TWITTER_PHONE_OR_EMAIL</code>: 可选，Twitter 手机号码或电子邮件地址</li><li><code>TWITTER_AUTHENTICATION_SECRET</code>: 可选，Twitter 两步验证 -&gt; 认证应用 -&gt; <code>otpauth://totp/Twitter:@_RSSHub?secret=xxxxxxxxxxxxxxxx&amp;issuer=Twitter</code> 中的 secret 部分</li></ul><h3 id="wordpress" tabindex="-1">Wordpress <a class="header-anchor" href="#wordpress" aria-label="Permalink to &quot;Wordpress&quot;">​</a></h3><ul><li><p><code>WORDPRESS_CDN</code>: 用于中转 http 图片链接。可供考虑的服务见下表：</p><table tabindex="0"><thead><tr><th>url</th><th>backbone</th></tr></thead><tbody><tr><td><a href="https://imageproxy.pimg.tw/resize?url=" target="_blank" rel="noreferrer">https://imageproxy.pimg.tw/resize?url=</a></td><td>akamai</td></tr><tr><td><a href="https://images.weserv.nl/?url=" target="_blank" rel="noreferrer">https://images.weserv.nl/?url=</a></td><td>cloudflare</td></tr><tr><td><a href="https://pic1.xuehuaimg.com/proxy" target="_blank" rel="noreferrer">https://pic1.xuehuaimg.com/proxy</a></td><td>cloudflare</td></tr><tr><td><a href="https://cors.netnr.workers.dev" target="_blank" rel="noreferrer">https://cors.netnr.workers.dev</a></td><td>cloudflare</td></tr><tr><td><a href="https://netnr-proxy.openode.io" target="_blank" rel="noreferrer">https://netnr-proxy.openode.io</a></td><td>digitalocean</td></tr></tbody></table></li></ul><h3 id="youtube" tabindex="-1">YouTube <a class="header-anchor" href="#youtube" aria-label="Permalink to &quot;YouTube&quot;">​</a></h3><p><a href="https://console.developers.google.com/" target="_blank" rel="noreferrer">申请地址</a></p><ul><li>全部路由</li><li><code>YOUTUBE_KEY</code>: YouTube API Key，支持多个 key，用英文逗号 <code>,</code> 隔开</li><li>订阅列表路由额外设置</li><li><code>YOUTUBE_CLIENT_ID</code>: YouTube API 的 OAuth 2.0 客户端 ID</li><li><code>YOUTUBE_CLIENT_SECRET</code>: YouTube API 的 OAuth 2.0 客户端 Secret</li><li><code>YOUTUBE_REFRESH_TOKEN</code>: YouTube API 的 OAuth 2.0 客户端 Refresh Token。可以按照 <a href="https://gist.github.com/Kurukshetran/5904e8cb2361623498481f4a9a1338aa" target="_blank" rel="noreferrer">此 gist</a> 获取。</li></ul><h3 id="zodgame" tabindex="-1">ZodGame <a class="header-anchor" href="#zodgame" aria-label="Permalink to &quot;ZodGame&quot;">​</a></h3><ul><li><code>ZODGAME_COOKIE</code>: ZodGame 登录后的 Cookie 值</li></ul><h3 id="北京大学" tabindex="-1">北京大学 <a class="header-anchor" href="#北京大学" aria-label="Permalink to &quot;北京大学&quot;">​</a></h3><p>用于北大未名 BBS 全站十大</p><ul><li><code>PKUBBS_COOKIE</code>: BBS 注册用户登录后的 Cookie 值，获取方式： <ol><li>登录后打开论坛首页</li><li>打开控制台， 刷新</li><li>找到 <code>https://bbs.pku.edu.cn/v2/home.php</code> 请求</li><li>找到请求头中的 Cookie</li></ol></li></ul><h3 id="滴答清单" tabindex="-1">滴答清单 <a class="header-anchor" href="#滴答清单" aria-label="Permalink to &quot;滴答清单&quot;">​</a></h3><ul><li><code>DIDA365_USERNAME</code>: 滴答清单用户名</li><li><code>DIDA365_PASSWORD</code>: 滴答清单密码</li></ul><h3 id="豆瓣" tabindex="-1">豆瓣 <a class="header-anchor" href="#豆瓣" aria-label="Permalink to &quot;豆瓣&quot;">​</a></h3><p>用于想看</p><ul><li><code>DOUBAN_COOKIE</code>: 豆瓣登陆后的 Cookie 值</li></ul><h3 id="饭否" tabindex="-1">饭否 <a class="header-anchor" href="#饭否" aria-label="Permalink to &quot;饭否&quot;">​</a></h3><p><a href="https://github.com/FanfouAPI/FanFouAPIDoc/wiki/Oauth" target="_blank" rel="noreferrer">申请地址</a></p><ul><li><code>FANFOU_CONSUMER_KEY</code>: 饭否 Consumer Key</li><li><code>FANFOU_CONSUMER_SECRET</code>: 饭否 Consumer Secret</li><li><code>FANFOU_USERNAME</code>: 饭否登录用户名、邮箱、手机号</li><li><code>FANFOU_PASSWORD</code>: 饭否密码</li></ul><h3 id="和风天气" tabindex="-1">和风天气 <a class="header-anchor" href="#和风天气" aria-label="Permalink to &quot;和风天气&quot;">​</a></h3><p><a href="https://id.qweather.com/#/register?redirect=https%3A%2F%2Fconsole.qweather.com" target="_blank" rel="noreferrer">申请地址</a></p><ul><li><code>HEFENG_KEY</code>:API key</li></ul><h3 id="今日热榜" tabindex="-1">今日热榜 <a class="header-anchor" href="#今日热榜" aria-label="Permalink to &quot;今日热榜&quot;">​</a></h3><ul><li><code>TOPHUB_COOKIE</code>: 今日热榜登录后的 cookie，目前只需要 <code>itc_center_user=...</code> 以获取原始链接</li></ul><h3 id="米游社" tabindex="-1">米游社 <a class="header-anchor" href="#米游社" aria-label="Permalink to &quot;米游社&quot;">​</a></h3><ul><li><code>MIHOYO_COOKIE</code>：登录米游社后的 cookie，用于获取用户关注动态时间线。</li></ul><h3 id="南方周末" tabindex="-1">南方周末 <a class="header-anchor" href="#南方周末" aria-label="Permalink to &quot;南方周末&quot;">​</a></h3><p>付费全文</p><ul><li><code>INFZM_COOKIE</code>: infzm 账户登陆后的 cookie，目前只需要 <code>passport_session=...</code> 即可获取全文</li></ul><h3 id="轻小说文库" tabindex="-1">轻小说文库 <a class="header-anchor" href="#轻小说文库" aria-label="Permalink to &quot;轻小说文库&quot;">​</a></h3><ul><li><code>WENKU8_COOKIE</code>: 登陆轻小说文库后的 cookie</li></ul><h3 id="色花堂" tabindex="-1">色花堂 <a class="header-anchor" href="#色花堂" aria-label="Permalink to &quot;色花堂&quot;">​</a></h3><ul><li><code>SEHUATANG_COOKIE</code>: 登陆色花堂后的 cookie 值。</li></ul><h3 id="邮箱-邮件列表路由" tabindex="-1">邮箱 邮件列表路由 <a class="header-anchor" href="#邮箱-邮件列表路由" aria-label="Permalink to &quot;邮箱 邮件列表路由&quot;">​</a></h3><ul><li><p><code>EMAIL_CONFIG_{email}</code>: 邮箱设置，替换 <code>{email}</code> 为 邮箱账号，邮件账户的 <code>@</code> 与 <code>.</code> 替换为 <code>_</code>，例如 <code>EMAIL_CONFIG_xxx_qq_com</code>。Linux 内容格式为 <code>password=密码&amp;host=服务器&amp;port=端口</code>，docker 内容格式为 <code>password=密码&amp;host=服务器&amp;port=端口</code>，例如：</p></li><li><p>Linux 环境变量：<code>EMAIL_CONFIG_xxx_qq_com=&quot;password=123456&amp;host=imap.qq.com&amp;port=993&quot;</code></p></li><li><p>docker 环境变量：<code>EMAIL_CONFIG_xxx_qq_com=password=123456&amp;host=imap.qq.com&amp;port=993</code>，请勿添加引号 <code>&#39;</code>，<code>&quot;</code>。</p></li><li><p>注意：邮箱的路由不支持使用 socks5h 的代理，主要是受 <code>ImapFlow</code> 这个第三方库的限制，使用的时候需要注意。</p></li></ul><h3 id="网易云歌单" tabindex="-1">网易云歌单 <a class="header-anchor" href="#网易云歌单" aria-label="Permalink to &quot;网易云歌单&quot;">​</a></h3><p>用于歌单及听歌排行</p><ul><li><code>NCM_COOKIES</code>: 网易云音乐登陆后的 cookie 值，可在浏览器控制台通过<code>document.cookie</code>获取。</li></ul><h3 id="微博" tabindex="-1">微博 <a class="header-anchor" href="#微博" aria-label="Permalink to &quot;微博&quot;">​</a></h3><p>用于个人时间线路由</p><p><a href="https://open.weibo.com/connect" target="_blank" rel="noreferrer">申请地址</a></p><ul><li><code>WEIBO_APP_KEY</code>: 微博 App Key</li><li><code>WEIBO_APP_SECRET</code>: 微博 App Secret</li><li><code>WEIBO_REDIRECT_URL</code>: 微博登录授权回调地址，默认为 <code>RSSHub 地址/weibo/timeline/0</code>，自定义回调地址请确保最后可以转跳到 <code>RSSHub 地址/weibo/timeline/0?code=xxx</code></li></ul><p>用于自定义分组</p><ul><li><code>WEIBO_COOKIES</code>: 用户访问网页微博时所使用的 cookie, 获取方式： <ol><li>打开并登录 <a href="https://m.weibo.cn" target="_blank" rel="noreferrer">https://m.weibo.cn</a> （确保打开页面为手机版，如果强制跳转电脑端可尝试使用可更改 UserAgent 的浏览器插件）</li><li>按下<code>F12</code>打开控制台，切换至<code>Network（网络）</code>面板</li><li>在该网页切换至任意关注分组，并在面板打开最先捕获到的请求 （该情形下捕获到的请求路径应包含<code>/feed/group</code>）</li><li>查看该请求的<code>Headers（请求头）</code>, 找到<code>Cookie</code>字段并复制内容</li></ol></li></ul><h3 id="小宇宙" tabindex="-1">小宇宙 <a class="header-anchor" href="#小宇宙" aria-label="Permalink to &quot;小宇宙&quot;">​</a></h3><p>需要 App 登陆后抓包获取相应数据。</p><ul><li><code>XIAOYUZHOU_ID</code>: 即数据包中的 <code>x-jike-device-id</code>。</li><li><code>XIAOYUZHOU_TOKEN</code>: 即数据包中的 <code>x-jike-refresh-token</code>。</li></ul><h3 id="新榜" tabindex="-1">新榜 <a class="header-anchor" href="#新榜" aria-label="Permalink to &quot;新榜&quot;">​</a></h3><ul><li><code>NEWRANK_COOKIE</code>: 登陆后的 COOKIE 值，其中 token 是必要的，其他可删除</li></ul><h3 id="喜马拉雅" tabindex="-1">喜马拉雅 <a class="header-anchor" href="#喜马拉雅" aria-label="Permalink to &quot;喜马拉雅&quot;">​</a></h3><ul><li><code>XIMALAYA_TOKEN</code>: 对应 cookie 中的 <code>1&amp;_token</code>，获取方式： <ol><li>登陆喜马拉雅网页版</li><li>打开控制台，刷新</li><li>查找名称为<code>1&amp;_token</code>的<code>cookie</code>，其内容即为<code>XIMALAYA_TOKEN</code>的值（即在<code>cookie</code> 中查找 <code>1&amp;_token=***;</code>，并设置 <code>XIMALAYA_TOKEN = ***</code>）</li></ol></li></ul><h3 id="知乎用户" tabindex="-1">知乎用户 <a class="header-anchor" href="#知乎用户" aria-label="Permalink to &quot;知乎用户&quot;">​</a></h3><p>用于用户关注时间线</p><ul><li><code>ZHIHU_COOKIES</code>: 知乎登录后的 cookie 值。 <ol><li>可以在知乎网页版的一些请求的请求头中找到，如 <code>GET /moments</code> 请求头中的 <code>cookie</code> 值。</li></ol></li></ul>',213)]))}const b=o(c,[["render",d]]);export{u as __pageData,b as default};
