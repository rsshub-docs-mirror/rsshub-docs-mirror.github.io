import{_ as n,C as l,c as p,o as h,a2 as a,j as i,a as e,G as o}from"./chunks/framework.B9MTFJbE.js";const F=JSON.parse('{"title":"Deployment","description":"","frontmatter":{"sidebar":"auto"},"headers":[],"relativePath":"deploy/index.md","filePath":"deploy/index.md","lastUpdated":1751723006000}'),r={name:"deploy/index.md"},d={id:"deploy-to-vercel",tabindex:"-1"};function k(c,s,u,g,y,b){const t=l("Badge");return h(),p("div",null,[s[3]||(s[3]=a(`<h1 id="deployment" tabindex="-1">Deployment <a class="header-anchor" href="#deployment" aria-label="Permalink to &quot;Deployment&quot;">​</a></h1><p>RSSHub provides a painless deployment process if you are equipped with basic programming knowledge, you may open an <a href="https://github.com/DIYgod/RSSHub/issues/new/choose" target="_blank" rel="noreferrer">issue</a> if you believe you have encountered a problem not listed <a href="https://github.com/DIYgod/RSSHub/issues" target="_blank" rel="noreferrer">here</a>, the community will try to sort it out asap.</p><p>The deployment may involve the followings:</p><ol><li>Command line interface</li><li><a href="https://git-scm.com/" target="_blank" rel="noreferrer">Git</a></li><li><a href="https://nodejs.org/" target="_blank" rel="noreferrer">Node.js</a></li><li><a href="https://www.npmjs.com/get-npm" target="_blank" rel="noreferrer">npm</a> or <a href="https://yarnpkg.com/zh-Hans/docs/install" target="_blank" rel="noreferrer">yarn</a></li></ol><p>Deploy for public access may require:</p><ol><li><a href="https://www.nginx.com/resources/wiki/start/topics/tutorials/install/" target="_blank" rel="noreferrer">Nginx</a></li><li><a href="https://www.docker.com/get-started" target="_blank" rel="noreferrer">Docker</a> or <a href="https://docs.docker.com/compose/install/" target="_blank" rel="noreferrer">docker-compose</a></li><li><a href="https://redis.io/download" target="_blank" rel="noreferrer">Redis</a></li><li><a href="https://devcenter.heroku.com/articles/getting-started-with-nodejs" target="_blank" rel="noreferrer">Heroku</a></li><li><a href="https://cloud.google.com/appengine/" target="_blank" rel="noreferrer">Google App Engine</a></li><li><a href="https://fly.io/" target="_blank" rel="noreferrer">Fly.io</a></li><li><a href="https://zeabur.com" target="_blank" rel="noreferrer">Zeabur</a></li><li><a href="https://sealos.io" target="_blank" rel="noreferrer">Sealos</a></li></ol><h2 id="docker-image" tabindex="-1">Docker Image <a class="header-anchor" href="#docker-image" aria-label="Permalink to &quot;Docker Image&quot;">​</a></h2><p>The following two registries are supported:</p><ul><li><p>Docker Hub: <a href="https://hub.docker.com/r/diygod/rsshub" target="_blank" rel="noreferrer"><code>diygod/rsshub</code></a></p></li><li><p>GitHub: <a href="https://github.com/DIYgod/RSSHub/pkgs/container/rsshub" target="_blank" rel="noreferrer"><code>ghcr.io/diygod/rsshub</code></a></p></li></ul><p>Supported architectures include:</p><ul><li><p><code>linux/amd64</code></p></li><li><p><code>linux/arm64</code></p></li></ul><p><s>- <code>linux/arm/v7</code></s> (Dropped support since <code>2025-04-22</code>)</p><p>There are several tags available:</p><table tabindex="0"><thead><tr><th>Tag</th><th>Description</th><th>Puppeteer Supported</th><th>Example</th></tr></thead><tbody><tr><td><code>latest</code></td><td>Latest version</td><td>No</td><td><code>latest</code></td></tr><tr><td><code>chromium-bundled</code></td><td>Latest version with Chromium bundled in</td><td>Yes</td><td><code>chromium-bundled</code></td></tr><tr><td><code>{YYYY-MM-DD}</code></td><td>Specific date of the release</td><td>No</td><td><code>2021-06-18</code></td></tr><tr><td><code>chromium-bundled-{YYYY-MM-DD}</code></td><td>Specific date of the release with Chromium bundled in</td><td>Yes</td><td><code>chromium-bundled-2021-06-18</code></td></tr><tr><td><code>{commit hash}</code></td><td>Specific commit</td><td>No</td><td><code>e7c233b1df982fae10684a11c9df57892e96940a</code></td></tr></tbody></table><p>While supporting puppeteer may consume more resources, it also supports a wider range of routes.</p><h2 id="docker-compose-deployment-recommended" tabindex="-1">Docker Compose Deployment (Recommended) <a class="header-anchor" href="#docker-compose-deployment-recommended" aria-label="Permalink to &quot;Docker Compose Deployment (Recommended)&quot;">​</a></h2><h3 id="install" tabindex="-1">Install <a class="header-anchor" href="#install" aria-label="Permalink to &quot;Install&quot;">​</a></h3><p>Download <a href="https://github.com/DIYgod/RSSHub/blob/master/docker-compose.yml" target="_blank" rel="noreferrer">docker-compose.yml</a></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wget</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://raw.githubusercontent.com/DIYgod/RSSHub/master/docker-compose.yml</span></span></code></pre></div><p>Check if any configuration needs to be changed</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker-compose.yml</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # or your favorite editor</span></span></code></pre></div><p>Launch</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker-compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> up</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span></span></code></pre></div><p>Open <code>http://{Server IP}:1200</code> in your browser, enjoy it! ✅</p><h3 id="update" tabindex="-1">Update <a class="header-anchor" href="#update" aria-label="Permalink to &quot;Update&quot;">​</a></h3><p><strong>Automatic Update</strong></p><p>Use <a href="https://github.com/containrrr/watchtower" target="_blank" rel="noreferrer">watchtower</a></p><p><strong>Manual Update</strong></p><p>Update image</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker-compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span></span></code></pre></div><p>Restart container</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker-compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> up</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span></span></code></pre></div><h3 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;Configuration&quot;">​</a></h3><p>Edit <code>environment</code> in <a href="https://github.com/DIYgod/RSSHub/blob/master/docker-compose.yml" target="_blank" rel="noreferrer">docker-compose.yml</a></p><h2 id="docker-deployment" tabindex="-1">Docker Deployment <a class="header-anchor" href="#docker-deployment" aria-label="Permalink to &quot;Docker Deployment&quot;">​</a></h2><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>This deployment method does not include browserless and redis dependencies. If needed, please switch to the Docker Compose deployment method or deploy external dependencies yourself.</p></div><h3 id="install-1" tabindex="-1">Install <a class="header-anchor" href="#install-1" aria-label="Permalink to &quot;Install&quot;">​</a></h3><p>Execute the following command to pull RSSHub&#39;s docker image.</p><p>No puppeteer dependency</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rsshub</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 1200:1200</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> diygod/rsshub</span></span></code></pre></div><p>With puppeteer dependency</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rsshub</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 1200:1200</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> diygod/rsshub:chromium-bundled</span></span></code></pre></div><p>Open <code>http://{Server IP}:1200</code> in your browser, enjoy it! ✅</p><h3 id="update-1" tabindex="-1">Update <a class="header-anchor" href="#update-1" aria-label="Permalink to &quot;Update&quot;">​</a></h3><p><strong>Automatic Update</strong></p><p>Use <a href="https://github.com/containrrr/watchtower" target="_blank" rel="noreferrer">watchtower</a></p><p><strong>Manual Update</strong></p><p>Remove the old container</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stop</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rsshub</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rsshub</span></span></code></pre></div><p>Then repeat the installation steps</p><h3 id="configuration-1" tabindex="-1">Configuration <a class="header-anchor" href="#configuration-1" aria-label="Permalink to &quot;Configuration&quot;">​</a></h3><p>The simplest way to configure RSSHub container is via system environment variables.</p><p>For example, adding <code>-e CACHE_EXPIRE=3600</code> will set the cache time to 1 hour.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rsshub</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 1200:1200</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> CACHE_EXPIRE=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3600</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GITHUB_ACCESS_TOKEN=example</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> diygod/rsshub</span></span></code></pre></div><p>This deployment method does not include puppeteer (unless using <code>diygod/rsshub:chromium-bundled</code> instead) and Redis dependencies. Use the Docker Compose deployment method or deploy external dependencies yourself if you need it.</p><p>To configure more options please refer to <a href="#configuration">Configuration</a>.</p><h2 id="manual-deployment" tabindex="-1">Manual Deployment <a class="header-anchor" href="#manual-deployment" aria-label="Permalink to &quot;Manual Deployment&quot;">​</a></h2><p>The most direct way to deploy <code>RSSHub</code>, you can follow the steps below to deploy<code>RSSHub</code> on your computer, server or anywhere.</p><h3 id="install-2" tabindex="-1">Install <a class="header-anchor" href="#install-2" aria-label="Permalink to &quot;Install&quot;">​</a></h3><p>Execute the following commands to download the source code</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/DIYgod/RSSHub.git</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> RSSHub</span></span></code></pre></div><p>Execute the following commands to install dependencies</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-C2Nv6" id="tab-tPwTdEr" checked><label data-title="pnpm" for="tab-tPwTdEr">pnpm</label><input type="radio" name="group-C2Nv6" id="tab-3QdRWQE"><label data-title="yarn" for="tab-3QdRWQE">yarn</label><input type="radio" name="group-C2Nv6" id="tab-metgFj-"><label data-title="npm" for="tab-metgFj-">npm</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div></div></div><h3 id="build" tabindex="-1">Build <a class="header-anchor" href="#build" aria-label="Permalink to &quot;Build&quot;">​</a></h3><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-cpGen" id="tab-a3CoI_b" checked><label data-title="pnpm" for="tab-a3CoI_b">pnpm</label><input type="radio" name="group-cpGen" id="tab-I-T1B6_"><label data-title="yarn" for="tab-I-T1B6_">yarn</label><input type="radio" name="group-cpGen" id="tab-srN3Pha"><label data-title="npm" for="tab-srN3Pha">npm</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span></code></pre></div></div></div><h3 id="launch" tabindex="-1">Launch <a class="header-anchor" href="#launch" aria-label="Permalink to &quot;Launch&quot;">​</a></h3><p>Under <code>RSSHub</code>&#39;s root directory, execute the following commands to launch</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-PHjJK" id="tab-zidQ_vb" checked><label data-title="pnpm" for="tab-zidQ_vb">pnpm</label><input type="radio" name="group-PHjJK" id="tab-MHoCiEE"><label data-title="yarn" for="tab-MHoCiEE">yarn</label><input type="radio" name="group-PHjJK" id="tab-uLQoOiH"><label data-title="npm" for="tab-uLQoOiH">npm</label><input type="radio" name="group-PHjJK" id="tab-7RSvKOJ"><label data-title="pm2" for="tab-7RSvKOJ">pm2</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pm2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lib/index.ts</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rsshub</span></span></code></pre></div></div></div><p>Open <code>http://{Server IP}:1200</code> in your browser, enjoy it! ✅</p><h3 id="configuration-2" tabindex="-1">Configuration <a class="header-anchor" href="#configuration-2" aria-label="Permalink to &quot;Configuration&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>On arm/arm64, this deployment method does not include puppeteer dependencies. To enable puppeteer, install Chromium from your distribution repositories first, then set <code>CHROMIUM_EXECUTABLE_PATH</code> to its executable path.</p><p>Debian:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> chromium</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> echo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .env</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;CHROMIUM_EXECUTABLE_PATH=chromium&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .env</span></span></code></pre></div><p>Ubuntu/Raspbian:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> chromium-browser</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> echo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .env</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;CHROMIUM_EXECUTABLE_PATH=chromium-browser&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .env</span></span></code></pre></div></div><p>RSSHub can be configured by setting environment variables.</p><p>Create a <code>.env</code> file in the root directory of your project. Add environment-specific variables on new lines in the form of <code>NAME=VALUE</code>. For example:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">CACHE_TYPE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">redis</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">CACHE_EXPIRE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">600</span></span></code></pre></div><p>Please notice that it will not override already existed environment variables, more rules please refer to <a href="https://github.com/motdotla/dotenv" target="_blank" rel="noreferrer">dotenv</a></p><p>This deployment method does not include Redis dependencies. Use the Docker Compose deployment method or deploy external dependencies yourself if you need it.</p><p>To configure more options please refer to <a href="#configuration">Configuration</a>.</p><h3 id="update-2" tabindex="-1">Update <a class="header-anchor" href="#update-2" aria-label="Permalink to &quot;Update&quot;">​</a></h3><p>Under <code>RSSHub</code>&#39;s directory, execute the following commands to pull the latest source code for <code>RSSHub</code></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span></span></code></pre></div><p>Then repeat the installation steps.</p><h3 id="a-tip-for-nix-users" tabindex="-1">A tip for Nix users <a class="header-anchor" href="#a-tip-for-nix-users" aria-label="Permalink to &quot;A tip for Nix users&quot;">​</a></h3><p>To install nodejs, yarn and jieba (to build documentation) you can use the following <code>nix-shell</code> configuration script.</p><div class="language-nix vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nix</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    pkgs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;nixpkgs&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {};</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    node</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> pkgs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">nodejs-12_x</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> pkgs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">stdenv</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">mkDerivation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;nodejs-yarn-jieba&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    buildInputs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">node</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> pkgs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">yarn</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> pkgs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">pythonPackages</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">jieba</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="kubernetes-helm-deployment" tabindex="-1">Kubernetes(Helm) Deployment <a class="header-anchor" href="#kubernetes-helm-deployment" aria-label="Permalink to &quot;Kubernetes(Helm) Deployment&quot;">​</a></h2><p>RSSHub can be installed in Kubernetes using the Helm Chart from <a href="https://github.com/NaturalSelectionLabs/helm-charts/tree/main/charts/rsshub" target="_blank" rel="noreferrer">RSSHub Helm Chart</a></p><p>Ensure that the following requirements are met:</p><ul><li>Kubernetes 1.16+</li><li>Helm version 3.9+ is <a href="https://helm.sh/docs/intro/install/" target="_blank" rel="noreferrer">installed</a></li></ul><h3 id="install-3" tabindex="-1">Install <a class="header-anchor" href="#install-3" aria-label="Permalink to &quot;Install&quot;">​</a></h3><p>Add NaturalSelection Labs chart repository to Helm:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">helm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> repo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nsl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://naturalselectionlabs.github.io/helm-charts</span></span></code></pre></div><p>You can update the chart repository by running:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">helm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> repo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span></code></pre></div><p>And install it with the <code>helm</code> command line:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">helm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-release</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nsl/rsshub</span></span></code></pre></div><h3 id="update-3" tabindex="-1">Update <a class="header-anchor" href="#update-3" aria-label="Permalink to &quot;Update&quot;">​</a></h3><p>To upgrade the my-release RSSHub deployment:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">helm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> upgade</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-release</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nsl/rsshub</span></span></code></pre></div><h3 id="uninstall" tabindex="-1">Uninstall <a class="header-anchor" href="#uninstall" aria-label="Permalink to &quot;Uninstall&quot;">​</a></h3><p>To uninstall/delete the my-release RSSHub deployment:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">helm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> delete</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-release</span></span></code></pre></div><h3 id="installing-with-custom-values" tabindex="-1">Installing with custom values <a class="header-anchor" href="#installing-with-custom-values" aria-label="Permalink to &quot;Installing with custom values&quot;">​</a></h3><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-Of5Nz" id="tab-23gLKny" checked><label data-title="Using Helm CLI" for="tab-23gLKny">Using Helm CLI</label><input type="radio" name="group-Of5Nz" id="tab-0C9KEsb"><label data-title="With a custom values file" for="tab-0C9KEsb">With a custom values file</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">helm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-release</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nsl/rsshub</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --set=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;image.tag=2023-12-04&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --set=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;replicaCount=2&quot;</span></span></code></pre></div><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># File custom-values.yml</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## Install with &quot;helm install my-release nsl/rsshub -f ./custom-values.yml</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  tag</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2023-12-04&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">replicaCount</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span></span></code></pre></div></div></div><h3 id="install-with-ha-mode" tabindex="-1">Install with HA mode <a class="header-anchor" href="#install-with-ha-mode" aria-label="Permalink to &quot;Install with HA mode&quot;">​</a></h3><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-yXlMQ" id="tab-mqOo76M" checked><label data-title="HA mode without autoscaling" for="tab-mqOo76M">HA mode without autoscaling</label><input type="radio" name="group-yXlMQ" id="tab-Onn-0RT"><label data-title="HA mode with autoscaling" for="tab-Onn-0RT">HA mode with autoscaling</label></div><div class="blocks"><div class="language-yaml vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">replicaCount</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">puppeteer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  replicaCount</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span></span></code></pre></div><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">autoscaling</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  enabled</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  minReplicas</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">puppeteer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  autoscaling</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    enabled</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    minReplicas</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span></span></code></pre></div></div></div><h3 id="install-with-external-redis" tabindex="-1">Install with external Redis <a class="header-anchor" href="#install-with-external-redis" aria-label="Permalink to &quot;Install with external Redis&quot;">​</a></h3><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">redis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # -- Disable internal redis</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  enabled</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">env</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # -- other env --</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  REDIS_URL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">redis://external-redis:6379/</span></span></code></pre></div><p>To configure more values please refer to <a href="https://github.com/NaturalSelectionLabs/helm-charts/tree/main/charts/rsshub" target="_blank" rel="noreferrer">RSSHub Helm Chart</a>.</p><h2 id="ansible-deployment" tabindex="-1">Ansible Deployment <a class="header-anchor" href="#ansible-deployment" aria-label="Permalink to &quot;Ansible Deployment&quot;">​</a></h2><p>This Ansible playbook includes RSSHub, Redis, browserless (uses Docker) and Caddy 2</p><p>Currently only support Ubuntu 20.04</p><p>Requires sudo privilege and virtualization capability (Docker will be automatically installed)</p><h3 id="install-4" tabindex="-1">Install <a class="header-anchor" href="#install-4" aria-label="Permalink to &quot;Install&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ansible</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/DIYgod/RSSHub.git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/RSSHub</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/RSSHub/scripts/ansible</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ansible-playbook</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rsshub.yaml</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># When prompt to enter a domain name, enter the domain name that this machine/VM will use</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># For example, if your users use https://rsshub.example.com to access your RSSHub instance, enter rsshub.example.com (remove the https://)</span></span></code></pre></div><h3 id="update-4" tabindex="-1">Update <a class="header-anchor" href="#update-4" aria-label="Permalink to &quot;Update&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/RSSHub/scripts/ansible</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ansible-playbook</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rsshub.yaml</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># When prompt to enter a domain name, enter the domain name that this machine/VM will use</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># For example, if your users use https://rsshub.example.com to access your RSSHub instance, enter rsshub.example.com (remove the https://)</span></span></code></pre></div><h2 id="deploy-to-railway" tabindex="-1">Deploy to Railway <a class="header-anchor" href="#deploy-to-railway" aria-label="Permalink to &quot;Deploy to Railway&quot;">​</a></h2><p>Automatic updates are included.</p><p><a href="https://railway.app/template/QxW__f?referralCode=9wT3hc" target="_blank" rel="noreferrer"><img src="https://railway.app/button.svg" alt="Deploy on Railway"></a></p><h2 id="deploy-to-heroku" tabindex="-1">Deploy to Heroku <a class="header-anchor" href="#deploy-to-heroku" aria-label="Permalink to &quot;Deploy to Heroku&quot;">​</a></h2><h3 id="instant-deploy-without-automatic-update" tabindex="-1">Instant deploy (without automatic update) <a class="header-anchor" href="#instant-deploy-without-automatic-update" aria-label="Permalink to &quot;Instant deploy (without automatic update)&quot;">​</a></h3><p><a href="https://heroku.com/deploy?template=https%3A%2F%2Fgithub.com%2FDIYgod%2FRSSHub" target="_blank" rel="noreferrer"><img src="https://www.herokucdn.com/deploy/button.svg" alt="Deploy to Heroku"></a></p><h3 id="automatic-deploy-upon-update" tabindex="-1">Automatic deploy upon update <a class="header-anchor" href="#automatic-deploy-upon-update" aria-label="Permalink to &quot;Automatic deploy upon update&quot;">​</a></h3><ol><li><a href="https://github.com/DIYgod/RSSHub/fork" target="_blank" rel="noreferrer">Fork RSSHub</a> to your GitHub account.</li><li>Deploy your fork to Heroku: <code>https://heroku.com/deploy?template=URL</code>, where <code>URL</code> is your fork address (<em>e.g.</em> <code>https://github.com/USERNAME/RSSHub</code>).</li><li>Configure <code>automatic deploy</code> in Heroku app to follow the changes to your fork.</li><li>Install <a href="https://github.com/apps/pull" target="_blank" rel="noreferrer">Pull</a> app to keep your fork synchronized with RSSHub.</li></ol><h2 id="deploy-to-zeabur" tabindex="-1">Deploy to Zeabur <a class="header-anchor" href="#deploy-to-zeabur" aria-label="Permalink to &quot;Deploy to Zeabur&quot;">​</a></h2><ol><li><a href="https://dash.zeabur.com" target="_blank" rel="noreferrer">Sign up for Zeabur</a></li><li>Create a new project.</li><li>Create a new service in the project, select deploying from the <strong>marketplace</strong>.</li><li>Add a domain name, if you use a custom domain name, you can refer to <a href="https://docs.zeabur.com/deploy/domain-binding" target="_blank" rel="noreferrer">Zeabur&#39;s domain name binding document</a>.</li></ol><p><a href="https://zeabur.com/templates/X46PTP" target="_blank" rel="noreferrer"><img src="https://zeabur.com/button.svg" alt="Deploy on Zeabur"></a></p>`,127)),i("h2",d,[s[0]||(s[0]=e("Deploy to Vercel ")),o(t,{type:"danger",text:"🚧 Under repair"}),s[1]||(s[1]=e()),s[2]||(s[2]=i("a",{class:"header-anchor",href:"#deploy-to-vercel","aria-label":'Permalink to "Deploy to Vercel <Badge type="danger" text="🚧 Under repair" />"'},"​",-1))]),s[4]||(s[4]=a(`<h3 id="instant-deploy-without-automatic-update-1" tabindex="-1">Instant deploy (without automatic update) <a class="header-anchor" href="#instant-deploy-without-automatic-update-1" aria-label="Permalink to &quot;Instant deploy (without automatic update)&quot;">​</a></h3><p><a href="https://vercel.com/import/project?template=https://github.com/DIYgod/RSSHub" target="_blank" rel="noreferrer"><img src="https://vercel.com/button" alt="Deploy to Vercel"></a></p><h3 id="automatic-deploy-upon-update-1" tabindex="-1">Automatic deploy upon update <a class="header-anchor" href="#automatic-deploy-upon-update-1" aria-label="Permalink to &quot;Automatic deploy upon update&quot;">​</a></h3><ol><li><a href="https://github.com/DIYgod/RSSHub/fork" target="_blank" rel="noreferrer">Fork RSSHub</a> to your GitHub account.</li><li>Deploy your fork to Vercel: Login Vercel with your GitHub account, create and deploy <a href="https://vercel.com/new/" target="_blank" rel="noreferrer">new Vercel project</a> with your RSSHub repository.</li><li>Install <a href="https://github.com/apps/pull" target="_blank" rel="noreferrer">Pull</a> app to keep your fork synchronized with RSSHub.</li></ol><h2 id="deploy-to-fly-io" tabindex="-1">Deploy to Fly.io <a class="header-anchor" href="#deploy-to-fly-io" aria-label="Permalink to &quot;Deploy to Fly.io&quot;">​</a></h2><h3 id="method-1-fork" tabindex="-1">Method 1: Fork <a class="header-anchor" href="#method-1-fork" aria-label="Permalink to &quot;Method 1: Fork&quot;">​</a></h3><ol><li><p><a href="https://github.com/DIYgod/RSSHub/fork" target="_blank" rel="noreferrer">Fork RSSHub</a> to your GitHub account;</p></li><li><p>Clone the source code from your fork</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">your</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> usernam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/RSSHub.git</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> RSSHub</span></span></code></pre></div></li><li><p><a href="https://fly.io/app/sign-up" target="_blank" rel="noreferrer">Sign up for Fly.io</a> and install the <a href="https://fly.io/docs/hands-on/install-flyctl/" target="_blank" rel="noreferrer">flyctl CLI</a>;</p></li><li><p>Run <code>fly launch</code> and choose a unique name and region to deploy;</p></li><li><p>Use <code>fly secrets set KEY=VALUE</code> to <a href="./config#route-specific-configurations">configure some modules</a>;</p></li><li><p><a href="https://fly.io/docs/app-guides/continuous-deployment-with-github-actions/" target="_blank" rel="noreferrer">Set up automatic deployment via GitHub Actions</a>;</p></li><li><p>(Optional) Use <code>fly certs add your domain</code> to configure a custom domain, and follow the instructions to configure the related domain resolution at your DNS service provider (you can check the domain configuration status on the Dashboard Certificate page).</p></li></ol><p>Upgrade: On the homepage of your Forked repository, click &quot;Sync fork - Update Branch&quot; to manually update to the latest official master branch, or install the <a href="https://github.com/apps/pull" target="_blank" rel="noreferrer">Pull</a> GitHub app to keep your fork synchronized with upstream.</p><h3 id="method-2-maintain-fly-toml-by-yourself" tabindex="-1">Method 2: Maintain fly.toml by yourself <a class="header-anchor" href="#method-2-maintain-fly-toml-by-yourself" aria-label="Permalink to &quot;Method 2: Maintain fly.toml by yourself&quot;">​</a></h3><ol><li><a href="https://fly.io/app/sign-up" target="_blank" rel="noreferrer">Sign up for Fly.io</a> and install the <a href="https://fly.io/docs/hands-on/install-flyctl/" target="_blank" rel="noreferrer">flyctl CLI</a>;</li><li>Create a new empty directory locally, run <code>fly launch</code> in it, and choose a unique name and instance region;</li><li>Edit the generated fly.toml file, add</li></ol><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">build</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">image = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;diygod/rsshub:latest&quot;</span></span></code></pre></div><p>Depending on the actual situation, you may want to use other image tags, please read the relevant content of <a href="#docker-image">Docker Image</a>; 4. Modify the <code>[env]</code> section in fly.toml or use <code>fly secrets set KEY=VALUE</code> to <a href="./config#route-specific-configurations">configure some modules</a>; 5. Execute <code>fly deploy</code> to start the application; 6. (Optional) Use <code>fly certs add your domain</code> to configure a custom domain, and follow the instructions to configure the related domain resolution at your DNS service provider (you can check the domain configuration status on the Dashboard Certificate page).</p><p>Upgrade: Enter the directory where you saved the <code>fly.toml</code> file and execute <code>fly deploy</code> to trigger the steps of pulling the latest image and starting the upgraded application.</p><h3 id="configure-built-in-upstash-redis-as-cache" tabindex="-1">Configure built-in Upstash Redis as cache <a class="header-anchor" href="#configure-built-in-upstash-redis-as-cache" aria-label="Permalink to &quot;Configure built-in Upstash Redis as cache&quot;">​</a></h3><p>Run in the <code>RSSHub</code> folder</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> flyctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> redis</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span></span></code></pre></div><p>to create a new Redis database. Choose the same region as when you created the RSSHub app above, and it is recommended to enable <a href="https://redis.io/docs/reference/eviction/" target="_blank" rel="noreferrer">eviction</a>. After creation, a string in the form of <code>redis://default:&lt;password&gt;@&lt;domain&gt;.upstash.io</code> will be printed.</p><p>Due to <a href="https://github.com/luin/ioredis/issues/1576" target="_blank" rel="noreferrer">a bug in a dependency</a>, you currently need to append the <code>family=6</code> parameter to the URL provided by Fly.io, i.e., use <code>redis://default:&lt;password&gt;@&lt;domain&gt;.upstash.io/?family=6</code> as the connection URL.</p><p>Then configure the <code>[env]</code> section in fly.toml or run</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> fly</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> secrets</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> CACHE_TYPE=redis</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> REDIS_URL=&#39;&lt;the connection URL&gt;&#39;</span></span></code></pre></div><p>and execute <code>fly deploy</code> (if use the second install method) to trigger a redeployment to complete the configuration.</p><h2 id="deploy-to-sealos-use-redis-as-cache" tabindex="-1">Deploy to Sealos(use Redis as cache) <a class="header-anchor" href="#deploy-to-sealos-use-redis-as-cache" aria-label="Permalink to &quot;Deploy to Sealos(use Redis as cache)&quot;">​</a></h2><p>Automatic updates are included.</p><p><a href="https://template.cloud.sealos.io/deploy?templateName=rsshub" target="_blank" rel="noreferrer"><img src="https://raw.githubusercontent.com/labring-actions/templates/main/Deploy-on-Sealos.svg" alt="Deploy to Sealos"></a></p><h2 id="deploy-to-pikapods" tabindex="-1">Deploy to PikaPods <a class="header-anchor" href="#deploy-to-pikapods" aria-label="Permalink to &quot;Deploy to PikaPods&quot;">​</a></h2><p>Run RSSHub from just $1/month. Includes automatic updates and $5 free starting credit.</p><p><a href="https://www.pikapods.com/pods?run=rsshub" target="_blank" rel="noreferrer"><img src="https://www.pikapods.com/static/run-button.svg" alt="Run on PikaPods"></a></p><h2 id="deploy-to-google-app-engine-gae" tabindex="-1">Deploy to Google App Engine(GAE) <a class="header-anchor" href="#deploy-to-google-app-engine-gae" aria-label="Permalink to &quot;Deploy to Google App Engine(GAE)&quot;">​</a></h2><h3 id="before-you-begin" tabindex="-1">Before You Begin <a class="header-anchor" href="#before-you-begin" aria-label="Permalink to &quot;Before You Begin&quot;">​</a></h3><p>Follow the <a href="https://cloud.google.com/appengine/docs/flexible/nodejs/quickstart" target="_blank" rel="noreferrer">official guide</a> for completing your GCP account settings, creating a new Node project, adding billing information (required), installing git and initializing gcloud(<a href="https://cloud.google.com/sdk/gcloud/" target="_blank" rel="noreferrer">link</a>). Node.js is not required if you don&#39;t plan to debug RSSHub locally.</p><p>Please note, GAE free tier doesn&#39;t support Flexible Environment, please check the pricing plan prior to deployment.</p><p>Node.js standard environment is still under beta, unknown or unexpected errors might be encountered during the deployment.</p><p>Execute <code>git clone https://github.com/DIYgod/RSSHub.git</code> to pull the latest code</p><h3 id="app-yaml-settings" tabindex="-1">app.yaml Settings <a class="header-anchor" href="#app-yaml-settings" aria-label="Permalink to &quot;app.yaml Settings&quot;">​</a></h3><h4 id="deploy-to-flexible-environment" tabindex="-1">Deploy to Flexible Environment <a class="header-anchor" href="#deploy-to-flexible-environment" aria-label="Permalink to &quot;Deploy to Flexible Environment&quot;">​</a></h4><p>Under RSSHub&#39;s root directory, create a file <code>app.yaml</code> with the following content:</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># [START app_yaml]</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">runtime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">custom</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">env</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">flex</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># This sample incurs costs to run on the App Engine flexible environment.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># The settings below are to reduce costs during testing and are not appropriate</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># for production use. For more information, see:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># https://cloud.google.com/appengine/docs/flexible/nodejs/configuring-your-app-with-app-yaml</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">manual_scaling</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    instances</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># app engine resources, adjust to suit your needs, the required disk space is 10 GB</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">resources</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    cpu</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    memory_gb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    disk_size_gb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">network</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    forwarded_ports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">80:1200</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">443:1200</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># environment variables section, refer to Settings</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">env_variables</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    CACHE_EXPIRE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;300&#39;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># [END app_yaml]</span></span></code></pre></div><h4 id="deploy-to-standard-environment" tabindex="-1">Deploy to standard environment <a class="header-anchor" href="#deploy-to-standard-environment" aria-label="Permalink to &quot;Deploy to standard environment&quot;">​</a></h4><p>Under RSSHub&#39;s root directory, create a file <code>app.yaml</code> with the following content:</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># [START app_yaml]</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">runtime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nodejs8</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">network</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    forwarded_ports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">80:1200</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">443:1200</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># environment variables section, refer to Settings</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">env_variables</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    CACHE_EXPIRE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;300&#39;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># [END app_yaml]</span></span></code></pre></div><h3 id="install-5" tabindex="-1">Install <a class="header-anchor" href="#install-5" aria-label="Permalink to &quot;Install&quot;">​</a></h3><p>Under RSSHub&#39;s root directory, execute the following commands to launch RSSHub</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gcloud</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> deploy</span></span></code></pre></div><p>For changing the deployment project id or version id, please refer to <code>Deploying a service</code> section <a href="https://cloud.google.com/appengine/docs/flexible/nodejs/testing-and-deploying-your-app" target="_blank" rel="noreferrer">here</a>.</p><p>You can access your <code>Google App Engine URL</code> to check the deployment status</p><h2 id="play-with-docker" tabindex="-1">Play with Docker <a class="header-anchor" href="#play-with-docker" aria-label="Permalink to &quot;Play with Docker&quot;">​</a></h2><p>If you would like to test routes or avoid IP limits, etc., you may build your own RSSHub for free by clicking the button below.</p><p><a href="https://labs.play-with-docker.com/?stack=https://raw.githubusercontent.com/DIYgod/RSSHub/master/docker-compose.yml" target="_blank" rel="noreferrer"><img src="https://raw.githubusercontent.com/play-with-docker/stacks/master/assets/images/button.png" alt="Try in PWD"></a></p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><ul><li><a href="https://hub.docker.com" target="_blank" rel="noreferrer">DockerHub</a> account required</li><li><a href="https://labs.play-with-docker.com/" target="_blank" rel="noreferrer">Play with Docker</a> instance will last for 4 hours at most. It should only be used for testing purpose</li><li>If deploy success but port cannot be auto-deteced，please click the <code>open port</code> button on the top and type <code>1200</code></li><li>Sometimes PWD won&#39;t work as expected. If you encounter blank screen after <code>Start</code>, or some error during initialization, please retry</li></ul></div>`,49))])}const E=n(r,[["render",k]]);export{F as __pageData,E as default};
